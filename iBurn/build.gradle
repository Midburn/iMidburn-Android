buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jakewharton.hugo:hugo-plugin:1.2.1'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'android-apt'
apply plugin: 'com.jakewharton.hugo'
apply plugin: 'me.tatarka.retrolambda'

repositories {
    mavenCentral()
    jcenter()
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 21
        versionName "2017.0.0.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        archivesBaseName = "iburn-$versionName-$versionCode"

    }

    lintOptions {
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    signingConfigs {
        release {
            // We'll read release signingConfig's data from
            // gradle.properties in the project's root directory
        }
    }

    productFlavors {
        regular {
            buildConfigField "boolean", "MOCK", "false"
        }
        // Mock location and date data
        mock {
            buildConfigField "boolean", "MOCK", "true"
        }
    }

    buildTypes {

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release
            debuggable false
        }
        unsigned {
            minifyEnabled false
            signingConfig null
            debuggable false
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

// Read Signing key from gradle.properties located in project root
if (project.hasProperty('storeFile')) {
    android.signingConfigs.release.storeFile = file(storeFile)
}
if (project.hasProperty('storePassword')) {
    android.signingConfigs.release.storePassword = storePassword
}
if (project.hasProperty('keyAlias')) {
    android.signingConfigs.release.keyAlias = keyAlias
}
if (project.hasProperty('keyPassword')) {
    android.signingConfigs.release.keyPassword = keyPassword
}

def SUPPORT_LIB_VERSION = "25.3.1"

dependencies {

    // Android Support libraries
    compile "com.android.support:design:$SUPPORT_LIB_VERSION"
    compile "com.android.support:support-v4:$SUPPORT_LIB_VERSION"
    compile "com.android.support:appcompat-v7:$SUPPORT_LIB_VERSION"
    compile "com.android.support:recyclerview-v7:$SUPPORT_LIB_VERSION"
    compile "com.android.support:support-annotations:$SUPPORT_LIB_VERSION"

    // Google Play Services
    compile 'com.google.android.gms:play-services-gcm:10.2.1'
    compile 'com.google.android.gms:play-services-maps:10.2.1'
    compile 'com.google.android.gms:play-services-location:10.2.1'

    // 3rd Party libraries
    compile 'com.google.code.gson:gson:2.7'
    compile 'net.hockeyapp.android:HockeySDK:4.0.2'
    compile 'com.readystatesoftware.sqliteasset:sqliteassethelper:2.0.1'
    compile 'com.jakewharton:butterknife:8.2.1'
    apt 'com.jakewharton:butterknife-compiler:8.2.1'
    compile 'com.jakewharton.timber:timber:4.1.2'
    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'com.squareup.sqlbrite:sqlbrite:0.7.0'
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    compile 'com.squareup.okhttp3:okhttp:3.4.1'
    compile 'pl.charmas.android:android-reactive-location:0.9@aar'
    compile 'com.tonicartos:superslim:0.4.13'
    compile 'xyz.danoz:recyclerviewfastscroller:0.1.3'
    compile 'org.prx:playerhater:0.3.6@aar'

    // 3rd Party libraries with apt
    compile 'net.simonvt.schematic:schematic:0.6.7'
    apt 'net.simonvt.schematic:schematic-compiler:0.6.7'

    compile 'com.github.hotchemi:permissionsdispatcher:2.0.7'
    apt 'com.github.hotchemi:permissionsdispatcher-processor:2.0.7'

    // Submodule dependencies
    releaseCompile project(path: ':libraries:android-gmaps-addons', configuration: 'release')
    debugCompile project(path: ':libraries:android-gmaps-addons', configuration: 'debug')
    unsignedCompile project(path: ':libraries:android-gmaps-addons', configuration: 'debug')

    // Test dependencies
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2'
    androidTestCompile "com.android.support:support-annotations:$SUPPORT_LIB_VERSION"

}